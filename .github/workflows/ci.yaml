on:
  push:
    #tags:
    #  - "v[0-9]+.[0-9]+.[0-9]+"

name: ci

jobs:
  test:
    name: ci build & test
    runs-on: ubuntu-latest
    steps:
      - name: Authenticate as the cicd github app
        id: cicd-app-authenticate
        uses: polysensus/cicd-app-token@main
        with:
          APP_PEM: ${{ secrets.CICD_APP_PEM }}
          APP_ID: ${{ secrets.CICD_APP_ID }}

      - name: Checkout the diamond-deploy repository
        uses: actions/checkout@v3
        with:
          repository: polysensus/diamond-deploy
          submodules: recursive
          path: diamond-deploy

      - name: Checkout the contracts repository
        uses: actions/checkout@v3
        with:
          repository: polysensus/chaintrap-contracts
          token: ${{ steps.cicd-app-authenticate.outputs.app_token }}
          submodules: recursive
          path: chaintrap-contracts

      - name: Checkout the arenastate repository
        uses: actions/checkout@v3
        with:
          repository: polysensus/chaintrap-arenastate
          submodules: recursive
          path: chaintrap-arenastate

      - name: Setup node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.15.0

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Install go-tusk and go-task
        run: |
          mkdir -p $GITHUB_WORKSPACE/bin

          # go-task
          sh -c "$(curl --location https://taskfile.dev/install.sh)" -- \
            -d -b $GITHUB_WORKSPACE/bin

          # go-tusk
          curl -sL https://git.io/tusk | bash -s -- -b $GITHUB_WORKSPACE/bin latest
          chmod a+x $GITHUB_WORKSPACE/bin/tusk
          echo $GITHUB_WORKSPACE/bin >> $GITHUB_PATH

      - name: Install arenastate with localy checked out chaintrap-contracts
        env:
          GITHUB_TOKEN: ${{ steps.cicd-app-authenticate.outputs.app_token }}
          CICD_APP_ID: ${{ secrets.CICD_APP_ID }}
          CICD_APP_PEM: ${{ secrets.CICD_APP_PEM }}

        run: |

          pushd diamond-deploy
          npm install
          popd
          pushd chaintrap-contracts
          npm install
          task build
          popd
          pushd chaintrap-arenastate
          echo "" > .npmrc
          echo "@polysensus:registry=https://npm.pkg.github.com:_authToken=$GITHUB_TOKEN" >> .npmrc

          grep chaintrap-contracts package.json
          grep chaintrap-contracts package-lock.json
          npm install

          grep version node_modules/@polysensus/diamond-deploy/package.json
          grep version node_modules/@polysensus/chaintrap-contracts/package.json
          find node_modules/@polysensus/chaintrap-contracts/abi

      - name: build
        working-directory: chaintrap-arenastate
        run: |
          ! grep -sq CHAINTRAP_CD .env && echo "CHAINTRAP_CD=true" >> .env
          task build

      - name: test
        working-directory: chaintrap-arenastate
        run: |
          ! grep -sq CHAINTRAP_CD .env && echo "CHAINTRAP_CD=true" >> .env
          task test:preflight
          task test

      - name: publish npm package
        working-directory: chaintrap-arenastate
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: contains(github.ref, 'refs/tags/') && github.event_name == 'push'
        run: |
          echo "" > .npmrc
          echo "@polysensus:registry=https://npm.pkg.github.com:_authToken=$GITHUB_TOKEN" >> .npmrc

          # github has scale issues when there are a large (> 20 ) npm packages in
          # a repo, so force for fixes seems like the right thing for now.
          FORCE=""
          if [[ ! $(git log -1 --pretty=%B) =~ '^release:v' ]]; then
            export FORCE=--force
          fi
          npm publish $FORCE

      - name: package cleanup
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: actions/delete-package-versions@v4
        if: contains(github.ref, 'refs/tags/') && github.event_name == 'push'
        with:
          package-name: "chaintrap-arenastate"
          package-type: "npm"
          min-versions-to-keep: 3

      # this didn't work, despite looking like jest/junit format the reporter
      # crashed when looking at the time property
      # https://github.com/marketplace/actions/test-reporter
      # - uses: actions/upload-artifact@v2
      #   if: success() || failure() # even if previous failed
      #   with:
      #     name: test-results
      #     path: chaintrap-arenastate/jest-junit.xml
