interpreter: bash -c
usage: arenactl
options:
  launchdir:
    # this is a go-tusk quirk
    environment: PWD

  contracts-dir:
    default: ../chaintrap-contracts

  THIS_TUSK:
    default: "tusk -qf tusk-arena.yml"

  CONTRACTS_DEVTOOL:
    default: "tusk -qf ../chaintrap-contracts/tusk.yml"

  deploy-key:
    default:
      command: cat .local/dev/wallets/wallet-deploy.key

  libdeploy-key:
    default:
      command: cat .local/dev/wallets/libdeploy.key

  depdir:
    usage: the directory to store deployment json files in
    default: ./.local/dev/deployed

  deploy-gaslimit:
    default: 3000000
  deploy-caimst-url:
    default: https://chains.hoy.polysensus.io/chains/caimst-209301/node/ethnode0/WWdEOHJUNVFDRXpPZ0VDb1IxTVpYOmFyZ29uMmlkIDMgNjRNQiAzMi5Kdkt6cEU5U09HNW02a3RBXzViYk8yRFZNeUw3cXBEdm5vQjhlOEtQMk5rPS5pR2JMMXpDRzBxbVRKdnRUN2RkLURxWlhSbDkxTWlYQm1RNDlKVzhjOF9jPQ==
  deploy-polygon-mumbai-url:
    default: https://polygon-mumbai.g.alchemy.com/v2/zyiZCXLwVEOZPVoixfOBBVvp7KE1oiqf
  deploy-hh-url:
    default: http://localhost:8545
  deploy-hh-private-key:
    # the private key for hh is well known
    default: "0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80"
  deploy-hh-account:
    default: "0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"

tasks:
  deploy-all:
    run:
      - task: deploy-caimst
      - task: deploy-polygon

  deploy-polygon:
    run:
      task:
        name: deploy-arena
        options:
          rpc: ${deploy-polygon-mumbai-url}
          deploy-key: ${deploy-key}

  deploy-polygon-diamond:
    run:
      task:
        name: deploy-arena-diamond
        options:
          rpc: ${deploy-polygon-mumbai-url}
          deploy-key: ${deploy-key}

  deploy-caimst:
    run:
      task:
        name: deploy-arena
        options:
          rpc: ${deploy-caimst-url}
          deploy-key: ${deploy-key}

  deploy-libs-caimst:
    run:
      task:
        name: deploy-libs
        options:
          rpc: ${deploy-caimst-url}
          deploy-key: ${deploy-key}
          chain: caimst

  deploy-libs-polygon:
    run:
      task:
        name: deploy-libs
        options:
          rpc: ${deploy-polygon-mumbai-url}
          deploy-key: ${deploy-key}
          chain: polygon

  build-pre-link:
    run:
      - command:
          exec: |
            #LIBLIB=$(${THIS_TUSK} liblink --chain caimst)
            #echo $LIBLIB
            #LIBLIB="lib/game.sol:Games.json:0xf88924661969b0d177e6883f5A6FA9A4F0962893,lib/mapstructure.sol:LocationMaps.json:0xBfA0794A14e2e7Bc2cC555446c9Cc318cb684261,lib/transcript.sol:Transcripts.json:0xFe00d7485d86c74d78b048e5AbA541Fcf7F7635d"
            #LIBLIB=\
            #--libraries lib/game.sol:Games.json:0xf88924661969b0d177e6883f5A6FA9A4F0962893 \
            #--libraries lib/mapstructure.sol:LocationMaps.json:0xBfA0794A14e2e7Bc2cC555446c9Cc318cb684261 \
            #--libraries lib/transcript.sol:Transcripts.json:0xFe00d7485d86c74d78b048e5AbA541Fcf7F7635d

            cd ${contracts-dir}

            forge build --sizes \
              --libraries lib/mapstructure.sol:LocationMaps.json:0xBfA0794A14e2e7Bc2cC555446c9Cc318cb684261 \
              --libraries lib/game.sol:Games.json:0xf88924661969b0d177e6883f5A6FA9A4F0962893 \
              --libraries lib/transcript.sol:Transcripts.json:0xFe00d7485d86c74d78b048e5AbA541Fcf7F7635d

  deploy-link-caimst:
    options:
      rpc:
        default: ${deploy-caimst-url}
      deploy-key:
        default: ${deploy-key}
    run:
      - command:
          exec: |
            #LIBLIB=$(${THIS_TUSK} liblink --chain caimst)
            #echo $LIBLIB
            #LIBLIB="lib/game.sol:Games.json:0xf88924661969b0d177e6883f5A6FA9A4F0962893,lib/mapstructure.sol:LocationMaps.json:0xBfA0794A14e2e7Bc2cC555446c9Cc318cb684261,lib/transcript.sol:Transcripts.json:0xFe00d7485d86c74d78b048e5AbA541Fcf7F7635d"
            #LIBLIB=\
            #--libraries lib/game.sol:Games.json:0xf88924661969b0d177e6883f5A6FA9A4F0962893 \
            #--libraries lib/mapstructure.sol:LocationMaps.json:0xBfA0794A14e2e7Bc2cC555446c9Cc318cb684261 \
            #--libraries lib/transcript.sol:Transcripts.json:0xFe00d7485d86c74d78b048e5AbA541Fcf7F7635d

            cd ${contracts-dir}

            forge create \
              --optimizer-runs 200 \
              --legacy \
              --rpc-url=${rpc} \
              --private-key=${deploy-key} \
              --gas-limit=${deploy-gaslimit} \
              --libraries lib/mapstructure.sol:LocationMaps.json:0xBfA0794A14e2e7Bc2cC555446c9Cc318cb684261 \
              --libraries lib/game.sol:Games.json:0xf88924661969b0d177e6883f5A6FA9A4F0962893 \
              --libraries lib/transcript.sol:Transcripts.json:0xFe00d7485d86c74d78b048e5AbA541Fcf7F7635d \
              chaintrap/arena.sol:Arena

  deploy-link-polygon:
    options:
      rpc:
        default: ${deploy-polygon-mumbai-url}
      deploy-key:
        default: ${deploy-key}
    run:
      - command:
          exec: |
            #LIBLIB=$(${THIS_TUSK} liblink --chain polygon)
            echo $LIBLIB
            cd ${contracts-dir}

            forge create \
              --optimizer-runs 200 \
              --legacy \
              --rpc-url=${rpc} \
              --private-key=${deploy-key} \
              --gas-limit=${deploy-gaslimit} \
              $LIBLIB \
              chaintrap/arena.sol:Arena

  deploy-hh:
    run:
      task:
        name: deploy-arena
        options:
          rpc: ${deploy-hh-url}
          deploy-key: ${deploy-hh-private-key}

  liblink:
    options:
      chain:
    run:
      - command:
          exec: |
            set -e
            libdir=$(cd ${launchdir} && cd ${depdir} && pwd)
            LIBLIB=""
            for chainlib in ${libdir}/${chain}-*.json; do
              libinfo=$(basename $chainlib)
              path="${libinfo%%:*}"
              name="${libinfo#*:}"
              path="${path#*-}"
              address=$(cat $chainlib | jq -r .deployedTo)
              LIBLIB="$LIBLIB --libraries lib/$path:$name:$address"
            done
            echo "$LIBLIB"

  deploy-libs:
    options:
      rpc:
      deploy-key:
      chain:
    run:
      - command:
          exec: |
            set -e
            cd ${contracts-dir}
            libdir=$(cd ${launchdir} && mkdir -p ${depdir} && cd ${depdir} && pwd)

            libs="game.sol:Games;transcript.sol:Transcripts;mapstructure.sol:LocationMaps"

            COMMON_OPTS="\
              --optimizer-runs 200 \
              --legacy \
              --rpc-url=${rpc} \
              --private-key=${deploy-key} \
              --gas-limit=${deploy-gaslimit} \
              --json"

            for libname in game.sol:Games transcript.sol:Transcripts mapstructure.sol:LocationMaps; do
              path="${libname%%:*}"
              name="${libname#*:}"
              forge create lib/$path:$name \
                $COMMON_OPTS | tee $libdir/${chain}-$libname.json
            done

  deploy-lib:
    options:
      rpc:
      deploy-key:
      chain:
    args:
      path:
      name:
    run:
      - command:
          exec: |
            set -e
            cd ${contracts-dir}
            libdir=$(cd ${launchdir} && mkdir -p ${depdir} && cd ${depdir} && pwd)

            # forge create lib/game.sol:Games
            forge create ${path}:${name} \
              --optimizer-runs 200 \
              --legacy \
              --rpc-url=${rpc} \
              --private-key=${deploy-key} \
              --gas-limit=${deploy-gaslimit} \
              --json | tee $libdir/${chain}-${name}.json

  deploy-arena-diamond:
    options:
      rpc:
      deploy-key:
    run:
      - command:
          exec: |
            set -e
            cd ${contracts-dir}

            export CHAINTRAP_CONTRACTS_OPERATOR_KEY="${deploy-key}"
            ls -lad scripts/deploy.s.sol
            forge script scripts/deploy.s.sol \
              --ffi \
              --rpc-url=${rpc} \
              --broadcast \
              -vvvv

  deploy-arena:
    options:
      rpc:
      deploy-key:
    run:
      - command:
          exec: |
            set -e
            cd ${contracts-dir}

            forge create chaintrap/arena.sol:Arena \
              --optimizer-runs 200 \
              --legacy \
              --rpc-url=${rpc} \
              --private-key=${deploy-key} \
              --gas-limit=${deploy-gaslimit}
