---
version: "3"
silent: true

vars:
  CURL_CICD_DEV: "curl -s -H 'Accept: application/vnd.github.v3.raw' -L https://api.github.com/repos/polysensus/cicd-dev-infra/contents"
  TUSKS: ".local/dev"

dotenv: [".env"]

tasks:
  bootstrap:
    desc: fetch the pre-requisites for all workflows
    cmds:
      - |
        mkdir -p {{.TUSKS}}
        cd {{.TUSKS}}
        {{.CURL_CICD_DEV}}/js/tusk-jspkg.yml?ref=v0.0.5 -o tusk-jspkg.yml
        {{.CURL_CICD_DEV}}/hardhat/tusk-hardhat.yml?ref=v0.0.5 -o tusk-hardhat.yml

  release:patch:
    desc: create patch release
    cmds:
      - |
        tusk -q -f {{.TUSKS}}/tusk-jspkg.yml version-update {{.CLI_ARGS}}

  fmt:
    - npm run format
  format:
    desc: automatic code formatting - run prettier and then lint
    cmds:
      - |
        npm run format
        npm run lint

  build:
    desc: format and lint the code, then build the package
    deps: [format]
    cmds:
      - npm run build

  test:
    cmds:
      - task: test:unit

  deploy:
    desc: deploy the contracts to caimst and mumbai
    cmds:
      - task: deploy:caimst
      - task: deploy:mumbai

  deploy:caimst:
    desc: deploy the contracts to caimst and mumbai
    cmds:
      - tusk -f tusk-arena.yml deploy-caimst
  deploy:caimst-new:
    desc: deploy the contracts to caimst and mumbai
    dotenv: [".env.caimst"]
    cmds:
      - tusk -f tusk-arena.yml deploy-arena-new

  deploy:mumbai:
    dotenv: [".env.mumbai"]
    desc: deploy the contracts to polygon mumbai testnet
    cmds:
      - tusk -f tusk-arena.yml deploy-arena --gasprice "2.6" {{.CLI_ARGS}}
  deploy:mumbai-new:
    desc: deploy the contracts to polygon mumbai testnet
    dotenv: [".env.mumbai"]
    cmds:
      - tusk -f tusk-arena.yml deploy-arena-new --gasprice "2.6"
  find:mumbai:
    dotenv: [".env.mumbai"]
    desc: find the arena on mumbai
    cmds:
      - |
        tusk -f tusk-arena.yml diamond-find

  deploy:hh:
    dotenv: [".env.hh"]
    desc: deploy the contracts to hardhat (assumes the local server is listening on 8545)
    cmds:
      - |
        tusk -f tusk-arena.yml deploy-arena
  deploy:hh-new:
    dotenv: [".env.hh"]
    desc: deploy the contracts to hardhata (assumes the local server is listening on 8545)
    cmds:
      - |
        tusk -f tusk-arena.yml deploy-arena-new
  find:hh:
    dotenv: [".env.hh"]
    desc: find the arena on hardhat
    cmds:
      - |
        tusk -f tusk-arena.yml diamond-find

  test:unit:
    desc: run the unit tests
    cmds:
      - npm run test -- {{.CLI_ARGS}}

  test:unit:ci:
    desc: run the unit tests for the ci (juint output)
    cmds:
      - |
        set -e
        # npm run test -- --reporter junit --outputFile jest-junit.xml
        npm run test -- --coverage

  test:integ:deploy:
    desc: start hardhat and deploy contracts for test:integ
    dotenv: [".env.hh"]
    cmds:
      - task: dev:hh:restart
      - task: deploy:hh-new
      - |
        set -e
        tusk -q -f tusk-arena.yml diamond-find | tee arenaproxy.addr

  dev:hh:start:
    desc: start a local hardhat node (if there isn't one running)
    cmds:
      - tusk -q -f {{.TUSKS}}/tusk-hardhat.yml start-node -d .local/hh

  dev:hh:restart:
    desc: restart the local hardhat node
    deps: [dev:hh:stop]
    cmds:
      - task: dev:hh:start

  dev:hh:stop:
    desc: stop a local hardhat node (according to pid in .local/hh/hh-pid)
    cmds:
      - |
        set -x
        ls -la {{.TUSKS}}
        tusk -q -f {{.TUSKS}}/tusk-hardhat.yml stop-node -d .local/hh
